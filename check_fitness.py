'''
signals: an array of 'buy' or 'sell' signals generated by bot
prices: an array of the price for each bitcoin at the time the signal was generated
evaluation mode: 'natural' for trading with whole number of coins and 'float' allows decimal for precision?
'''

def check_fitness(signals, prices, evaluation_mode, starting_cash=1000):
    cash = starting_cash
    bitcoin = 0
    # fitness = 0

    for i in range(len(signals)):
        curr_price = prices[i]
        # buy max number of bitcoins allowed with all cash in hand
        if signals == 'buy':
            if cash == 0:
                print('Out of cash, operation failed!')
            if evaluation_mode == 'natural': # operating on natural number of bitcoins
                coin_buy = (cash * (1 - 0.03)) // curr_price # how many bitcoins to buy
            if evaluation_mode == 'float': # float number of bitcoins for precision?
                coin_buy = (cash * (1 - 0.03)) / curr_price
            transaction = coin_buy * curr_price
            # transaction_fee = transaction * 0.03
            # if transaction_fee > cash*0.03: bitcoin -= 1
            cash -= (transaction * (1 + 0.03))
            bitcoin += coin_buy
            
        # sell all bitcoins - transaction fee
        if signals == 'sell':
            if bitcoin == 0:
                print('Out of bitcoins, operation failed!')
            transaction = bitcoin * curr_price
            cash += (transaction * (1 - 0.03))
            bitcoin = 0
            
    # for any remaining bitcoins at the end
    if bitcoin > 0:
        cash += (bitcoin * prices[-1]) * (1 - 0.03)
        bitcoin = 0

    fitness = cash
    return fitness